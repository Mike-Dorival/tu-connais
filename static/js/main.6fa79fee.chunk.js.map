{"version":3,"sources":["helpers/answer.ts","components/Home/Home.tsx","components/ChoiceTest/ChoiceTest.tsx","helpers/findTextLineBreaker.tsx","components/Questions/AnswerAndExplanation/AnswerAndExplanation.tsx","components/Questions/ScoreAndEndMessage/ScoreAndEndMessage.tsx","components/Questions/Question/Question.tsx","components/Questions/Questions.tsx","App.tsx","index.tsx"],"names":["Answer","Home","className","to","ChoiceTest","handleClick","useCallback","e","target","title","src","localStorage","setItem","JSON","stringify","url","onClick","Date","now","alt","height","findLineBreaker","text","split","map","item","index","key","props","children","AnswerAndExplanation","checkAnswer","explanation","nextQuestion","answer","check","BAD","toLowerCase","includes","ScoreAndEndMessage","endMessage","score","lengthAllQuestions","Question","question","choices","code","choice","Questions","useState","questionNumber","setQuestionNumber","currentQuestion","setCurrentQuestion","setLengthAllQuestions","response","setResponse","setScore","endTestMessage","setEndTestMessage","parse","getItem","useEffect","filterSubject","questionsDB","filter","type","totalQuestionsNumber","questions","length","selectQuestion","id","goodAnswer","GOOD","App","path","exact","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6fa79fee.chunk.js","sourcesContent":["export enum Answer {\n  GOOD = \"Bonne réponse\",\n  BAD = \"Mauvaise réponse\",\n}\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Home.css\";\n\nexport const Home: FC = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"center-container\">\n        <h1 className=\"home-title\">TU CONNAIS ?</h1>\n        <h4>orienté javascript</h4>\n        <h2 className=\"home-subtitle\">\n          Se tester, apprendre et comprendre, <br /> voila le but de ce quiz\n        </h2>\n        <Link to=\"/choice\">\n          <button>ENTRER</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./ChoiceTest.css\";\n\nexport const ChoiceTest: FC = () => {\n  const handleClick = useCallback((e) => {\n    const { title, src } = e.target;\n    localStorage.setItem(\"state\", JSON.stringify({ title, url: src }));\n  }, []);\n\n  return (\n    <div>\n      <Link to=\"/\">\n        <h5 className=\"choice-test-title-home\">TU CONNAIS ?</h5>\n      </Link>\n\n      <h1 className=\"choice-test-title\">\n        Choisissez votre sujet <br /> sur lequel vous testez\n      </h1>\n      <div className=\"choice-test-gallery\">\n        <div onClick={handleClick}>\n          <Link to={`question/${Date.now()}`}>\n            <img\n              title=\"js\"\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Unofficial_JavaScript_logo_2.svg/1200px-Unofficial_JavaScript_logo_2.svg.png\"\n              alt=\"logo_javascript\"\n              height=\"200\"\n            />\n          </Link>\n        </div>\n        <div onClick={handleClick}>\n          <Link to={`question/${Date.now()}`}>\n            <img\n              title=\"react\"\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/300px-React-icon.svg.png\"\n              alt=\"logo_react\"\n            />\n          </Link>\n        </div>\n        <div onClick={handleClick} className=\"choice-test\">\n          <Link to={`question/${Date.now()}`} className=\"choice-test-culture\">\n            <img title=\"culture web\" src=\"https://images-na.ssl-images-amazon.com/images/I/51USpXI-iRL.jpg\" alt=\"logo_culture_web\" height=\"200\" />\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const findLineBreaker = (text: string) => {\n  return text\n    .split(\"\\n\")\n    .map((item: string, index: number) => (\n      <h3 className=\"question-subtitle\" key={index}>\n        {item} <br />\n      </h3>\n    ))\n    .map((text) => text.props.children);\n};\n","import React, { FC, useCallback } from \"react\";\nimport { Answer } from \"../../../helpers/answer\";\nimport { findLineBreaker } from \"../../../helpers/findTextLineBreaker\";\n\ninterface AnswerAndExplanationProps {\n  checkAnswer: string;\n  explanation: string;\n  answer: string;\n  nextQuestion: () => void;\n}\n\nexport const AnswerAndExplanation: FC<AnswerAndExplanationProps> = ({ checkAnswer, explanation, nextQuestion, answer }) => {\n  const check = useCallback(() => nextQuestion(), [nextQuestion]);\n\n  return (\n    <div>\n      <h1 className=\"question-title\">{checkAnswer}</h1>\n      {checkAnswer === Answer.BAD && <h3 className=\"question-subtitle\"> La réponse était {answer.toLowerCase()} </h3>}\n      <p className=\"question-paragraph\">Explication : {explanation.includes(\"\\n\") ? findLineBreaker(explanation) : explanation}</p>\n      <button onClick={check}>Prochaine question</button>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface MessageProps {\n  endMessage: string;\n  score: number;\n  lengthAllQuestions: number;\n}\n\nexport const ScoreAndEndMessage: FC<MessageProps> = ({ endMessage, score, lengthAllQuestions }) => {\n  return (\n    <div className=\"question-center-content-msg\">\n      <h1>{endMessage}</h1>\n      <h3>\n        Votre score : {score}/{lengthAllQuestions}\n      </h3>\n      <Link to=\"/choice\">\n        <button>Sélectionner un autre test</button>\n      </Link>\n    </div>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { findLineBreaker } from \"../../../helpers/findTextLineBreaker\";\n\ninterface QuestionProps {\n  question: string;\n  choices: string[];\n  code: string;\n  checkAnswer: (answer: string) => void;\n}\n\nexport const Question: FC<QuestionProps> = ({ question, choices, code, checkAnswer }) => {\n  const check = useCallback(\n    (answer: string) => {\n      checkAnswer(answer);\n    },\n    [checkAnswer]\n  );\n\n  return (\n    <div key={question}>\n      <h1 className=\"question-title\">{question}</h1>\n      {<h2 className=\"question-paragraph\">{code?.includes(\"\\n\") ? findLineBreaker(code) : code}</h2>}\n      <div key={question} className=\"question-content-button\">\n        {choices.map((choice: string) => (\n          <button key={choice} className=\"question-button\" onClick={() => check(choice)}>\n            {choice}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect, FC } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport questionsDB from \"../../questions.json\";\n\nimport { AnswerAndExplanation } from \"./AnswerAndExplanation/AnswerAndExplanation\";\nimport { ScoreAndEndMessage } from \"./ScoreAndEndMessage/ScoreAndEndMessage\";\nimport { Question } from \"./Question/Question\";\n\nimport { Answer } from \"../../helpers/answer\";\n\nimport \"./Questions.css\";\n\ninterface State {\n  title: string;\n  url: string;\n}\n\ninterface Question {\n  id: number;\n  code: string;\n  question: string;\n  choices: string[];\n  answer: string;\n  explanation: string;\n}\n\nexport const Questions: FC = () => {\n  const [questionNumber, setQuestionNumber] = useState(1);\n  const [currentQuestion, setCurrentQuestion] = useState<Question[]>([]);\n\n  const [lengthAllQuestions, setLengthAllQuestions] = useState(0);\n  const [response, setResponse] = useState(\"\");\n\n  const [score, setScore] = useState(0);\n  const [endTestMessage, setEndTestMessage] = useState(\"\");\n  // ! équivalent à || quelque chose ex {}\n  const { title, url }: State = JSON.parse(localStorage.getItem(\"state\")!);\n\n  useEffect(() => {\n    const filterSubject = questionsDB.filter(({ type }) => type === title);\n\n    const totalQuestionsNumber = filterSubject[0].questions.length;\n\n    const selectQuestion: any[] = filterSubject[0].questions.filter(({ id }) => id === questionNumber);\n\n    setLengthAllQuestions(totalQuestionsNumber);\n    setCurrentQuestion(selectQuestion);\n  }, [questionNumber, title]);\n\n  const checkAnswer = (answer: string) => {\n    const goodAnswer: string = currentQuestion[0].answer === answer ? Answer.GOOD : Answer.BAD;\n\n    if (goodAnswer === Answer.GOOD) {\n      setScore(score + 1);\n    }\n\n    setResponse(goodAnswer);\n  };\n\n  const nextQuestion = () => {\n    if (questionNumber === lengthAllQuestions) {\n      setResponse(\"\");\n      setEndTestMessage(\"Fin du test\");\n    }\n    setQuestionNumber(questionNumber + 1);\n    setResponse(\"\");\n  };\n\n  return (\n    <div>\n      <Link to=\"/\">\n        <div className=\"question-center-header\">\n          <h5 className=\"question-title-home\">TU CONNAIS ?</h5>\n          <img className=\"question-size-image\" src={url} alt={title} />\n        </div>\n      </Link>\n\n      <div className=\"question-center-content\">\n        {response.length ? (\n          currentQuestion.map(({ id, explanation, answer }) => (\n            <AnswerAndExplanation key={id} checkAnswer={response} nextQuestion={nextQuestion} explanation={explanation} answer={answer} />\n          ))\n        ) : endTestMessage.length ? (\n          <ScoreAndEndMessage endMessage={endTestMessage} score={score} lengthAllQuestions={lengthAllQuestions} />\n        ) : (\n          currentQuestion.map(({ id, question, choices, code }) => (\n            <Question key={id} question={question} choices={choices} code={code} checkAnswer={checkAnswer} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Home } from \"./components/Home/Home\";\nimport { ChoiceTest } from \"./components/ChoiceTest/ChoiceTest\";\nimport { Questions } from \"./components/Questions/Questions\";\n\nimport \"./App.css\";\n\nexport const App: FC = () => {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/choice\" component={ChoiceTest} />\n          <Route path=\"/question\" component={Questions} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}